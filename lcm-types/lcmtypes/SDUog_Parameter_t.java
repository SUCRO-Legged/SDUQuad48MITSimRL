/* LCM type definition class file
 * This file was automatically generated by lcm-gen
 * DO NOT MODIFY BY HAND!!!!
 * lcm-gen 1.5.0
 */

package lcmtypes;
 
import java.io.*;
import java.util.*;
import lcm.lcm.*;
 
public final class SDUog_Parameter_t implements lcm.lcm.LCMEncodable
{
    public long timestamp;

    /**
     * LCM Type: double[3]
     */
    public double position[];

    /**
     * LCM Type: double[4]
     */
    public double orientation[];

    public int num_ranges;

    /**
     * LCM Type: int16_t[num_ranges]
     */
    public short ranges[];

    public String name;

    public boolean enabled;

    public double vm_kp_roll;

    public double vm_kp_pitch;

    public double vm_kp_height;

    public double vm_kd_roll;

    public double vm_kd_pitch;

    public double vm_kd_height;

    /**
     * LCM Type: double[6]
     */
    public double s[];

    /**
     * LCM Type: double[6]
     */
    public double w[];

    public double vm_kp_fx;

    public double vm_kp_fy;

    public double vm_kp_fomega;

    public double vm_kd_fx;

    public double vm_kd_fy;

    public double vm_kd_fomega;

    public double sduog_value1;

    public double sduog_value2;

    public double sduog_value3;

    public double sduog_value4;

    public double sduog_value5;

    public double sduog_value6;

 
    public SDUog_Parameter_t()
    {
        position = new double[3];
        orientation = new double[4];
        s = new double[6];
        w = new double[6];
    }
 
    public static final long LCM_FINGERPRINT;
    public static final long LCM_FINGERPRINT_BASE = 0xb84ebdd84c9cfe38L;
 
    static {
        LCM_FINGERPRINT = _hashRecursive(new ArrayList<Class<?>>());
    }
 
    public static long _hashRecursive(ArrayList<Class<?>> classes)
    {
        if (classes.contains(lcmtypes.SDUog_Parameter_t.class))
            return 0L;
 
        classes.add(lcmtypes.SDUog_Parameter_t.class);
        long hash = LCM_FINGERPRINT_BASE
            ;
        classes.remove(classes.size() - 1);
        return (hash<<1) + ((hash>>63)&1);
    }
 
    public void encode(DataOutput outs) throws IOException
    {
        outs.writeLong(LCM_FINGERPRINT);
        _encodeRecursive(outs);
    }
 
    public void _encodeRecursive(DataOutput outs) throws IOException
    {
        char[] __strbuf = null;
        outs.writeLong(this.timestamp); 
 
        for (int a = 0; a < 3; a++) {
            outs.writeDouble(this.position[a]); 
        }
 
        for (int a = 0; a < 4; a++) {
            outs.writeDouble(this.orientation[a]); 
        }
 
        outs.writeInt(this.num_ranges); 
 
        for (int a = 0; a < this.num_ranges; a++) {
            outs.writeShort(this.ranges[a]); 
        }
 
        __strbuf = new char[this.name.length()]; this.name.getChars(0, this.name.length(), __strbuf, 0); outs.writeInt(__strbuf.length+1); for (int _i = 0; _i < __strbuf.length; _i++) outs.write(__strbuf[_i]); outs.writeByte(0); 
 
        outs.writeByte( this.enabled ? 1 : 0); 
 
        outs.writeDouble(this.vm_kp_roll); 
 
        outs.writeDouble(this.vm_kp_pitch); 
 
        outs.writeDouble(this.vm_kp_height); 
 
        outs.writeDouble(this.vm_kd_roll); 
 
        outs.writeDouble(this.vm_kd_pitch); 
 
        outs.writeDouble(this.vm_kd_height); 
 
        for (int a = 0; a < 6; a++) {
            outs.writeDouble(this.s[a]); 
        }
 
        for (int a = 0; a < 6; a++) {
            outs.writeDouble(this.w[a]); 
        }
 
        outs.writeDouble(this.vm_kp_fx); 
 
        outs.writeDouble(this.vm_kp_fy); 
 
        outs.writeDouble(this.vm_kp_fomega); 
 
        outs.writeDouble(this.vm_kd_fx); 
 
        outs.writeDouble(this.vm_kd_fy); 
 
        outs.writeDouble(this.vm_kd_fomega); 
 
        outs.writeDouble(this.sduog_value1); 
 
        outs.writeDouble(this.sduog_value2); 
 
        outs.writeDouble(this.sduog_value3); 
 
        outs.writeDouble(this.sduog_value4); 
 
        outs.writeDouble(this.sduog_value5); 
 
        outs.writeDouble(this.sduog_value6); 
 
    }
 
    public SDUog_Parameter_t(byte[] data) throws IOException
    {
        this(new LCMDataInputStream(data));
    }
 
    public SDUog_Parameter_t(DataInput ins) throws IOException
    {
        if (ins.readLong() != LCM_FINGERPRINT)
            throw new IOException("LCM Decode error: bad fingerprint");
 
        _decodeRecursive(ins);
    }
 
    public static lcmtypes.SDUog_Parameter_t _decodeRecursiveFactory(DataInput ins) throws IOException
    {
        lcmtypes.SDUog_Parameter_t o = new lcmtypes.SDUog_Parameter_t();
        o._decodeRecursive(ins);
        return o;
    }
 
    public void _decodeRecursive(DataInput ins) throws IOException
    {
        char[] __strbuf = null;
        this.timestamp = ins.readLong();
 
        this.position = new double[(int) 3];
        for (int a = 0; a < 3; a++) {
            this.position[a] = ins.readDouble();
        }
 
        this.orientation = new double[(int) 4];
        for (int a = 0; a < 4; a++) {
            this.orientation[a] = ins.readDouble();
        }
 
        this.num_ranges = ins.readInt();
 
        this.ranges = new short[(int) num_ranges];
        for (int a = 0; a < this.num_ranges; a++) {
            this.ranges[a] = ins.readShort();
        }
 
        __strbuf = new char[ins.readInt()-1]; for (int _i = 0; _i < __strbuf.length; _i++) __strbuf[_i] = (char) (ins.readByte()&0xff); ins.readByte(); this.name = new String(__strbuf);
 
        this.enabled = ins.readByte()!=0;
 
        this.vm_kp_roll = ins.readDouble();
 
        this.vm_kp_pitch = ins.readDouble();
 
        this.vm_kp_height = ins.readDouble();
 
        this.vm_kd_roll = ins.readDouble();
 
        this.vm_kd_pitch = ins.readDouble();
 
        this.vm_kd_height = ins.readDouble();
 
        this.s = new double[(int) 6];
        for (int a = 0; a < 6; a++) {
            this.s[a] = ins.readDouble();
        }
 
        this.w = new double[(int) 6];
        for (int a = 0; a < 6; a++) {
            this.w[a] = ins.readDouble();
        }
 
        this.vm_kp_fx = ins.readDouble();
 
        this.vm_kp_fy = ins.readDouble();
 
        this.vm_kp_fomega = ins.readDouble();
 
        this.vm_kd_fx = ins.readDouble();
 
        this.vm_kd_fy = ins.readDouble();
 
        this.vm_kd_fomega = ins.readDouble();
 
        this.sduog_value1 = ins.readDouble();
 
        this.sduog_value2 = ins.readDouble();
 
        this.sduog_value3 = ins.readDouble();
 
        this.sduog_value4 = ins.readDouble();
 
        this.sduog_value5 = ins.readDouble();
 
        this.sduog_value6 = ins.readDouble();
 
    }
 
    public lcmtypes.SDUog_Parameter_t copy()
    {
        lcmtypes.SDUog_Parameter_t outobj = new lcmtypes.SDUog_Parameter_t();
        outobj.timestamp = this.timestamp;
 
        outobj.position = new double[(int) 3];
        System.arraycopy(this.position, 0, outobj.position, 0, 3); 
        outobj.orientation = new double[(int) 4];
        System.arraycopy(this.orientation, 0, outobj.orientation, 0, 4); 
        outobj.num_ranges = this.num_ranges;
 
        outobj.ranges = new short[(int) num_ranges];
        if (this.num_ranges > 0)
            System.arraycopy(this.ranges, 0, outobj.ranges, 0, (int) this.num_ranges); 
        outobj.name = this.name;
 
        outobj.enabled = this.enabled;
 
        outobj.vm_kp_roll = this.vm_kp_roll;
 
        outobj.vm_kp_pitch = this.vm_kp_pitch;
 
        outobj.vm_kp_height = this.vm_kp_height;
 
        outobj.vm_kd_roll = this.vm_kd_roll;
 
        outobj.vm_kd_pitch = this.vm_kd_pitch;
 
        outobj.vm_kd_height = this.vm_kd_height;
 
        outobj.s = new double[(int) 6];
        System.arraycopy(this.s, 0, outobj.s, 0, 6); 
        outobj.w = new double[(int) 6];
        System.arraycopy(this.w, 0, outobj.w, 0, 6); 
        outobj.vm_kp_fx = this.vm_kp_fx;
 
        outobj.vm_kp_fy = this.vm_kp_fy;
 
        outobj.vm_kp_fomega = this.vm_kp_fomega;
 
        outobj.vm_kd_fx = this.vm_kd_fx;
 
        outobj.vm_kd_fy = this.vm_kd_fy;
 
        outobj.vm_kd_fomega = this.vm_kd_fomega;
 
        outobj.sduog_value1 = this.sduog_value1;
 
        outobj.sduog_value2 = this.sduog_value2;
 
        outobj.sduog_value3 = this.sduog_value3;
 
        outobj.sduog_value4 = this.sduog_value4;
 
        outobj.sduog_value5 = this.sduog_value5;
 
        outobj.sduog_value6 = this.sduog_value6;
 
        return outobj;
    }
 
}

